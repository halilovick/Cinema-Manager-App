Index: src/main/java/ba/unsa/etf/rpr/dao/Dao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ba.unsa.etf.rpr.dao;\r\n\r\nimport java.util.List;\r\n\r\npublic interface Dao<T> {\r\n\r\n    /**\r\n     * get entity from database base on ID\r\n     *\r\n     * @param id primary key of entity\r\n     * @return Entity from database\r\n     */\r\n    T getById(int id);\r\n\r\n    /**\r\n     * Saves entity into database\r\n     *\r\n     * @param item bean for saving to database\r\n     * @return saved item with id field populated\r\n     */\r\n    T add(T item);\r\n\r\n    /**\r\n     * Fully updates entity in database based on id (primary) match.\r\n     *\r\n     * @param item - bean to be updated. id must be populated\r\n     * @return updated version of bean\r\n     */\r\n    T update(T item);\r\n\r\n    /**\r\n     * Hard delete of item from database with given id\r\n     *\r\n     * @param id - primary key of entity\r\n     */\r\n    void delete(int id);\r\n\r\n    /**\r\n     * Lists all entities from database. WARNING: Very slow operation because it reads all records.\r\n     *\r\n     * @return List of entities from database\r\n     */\r\n    List<T> getAll();\r\n    void resetIncrement();\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ba/unsa/etf/rpr/dao/Dao.java b/src/main/java/ba/unsa/etf/rpr/dao/Dao.java
--- a/src/main/java/ba/unsa/etf/rpr/dao/Dao.java	
+++ b/src/main/java/ba/unsa/etf/rpr/dao/Dao.java	
@@ -1,5 +1,7 @@
 package ba.unsa.etf.rpr.dao;
 
+import ba.unsa.etf.rpr.exceptions.FilmoviException;
+
 import java.util.List;
 
 public interface Dao<T> {
@@ -10,7 +12,7 @@
      * @param id primary key of entity
      * @return Entity from database
      */
-    T getById(int id);
+    T getById(int id) throws FilmoviException;
 
     /**
      * Saves entity into database
@@ -18,7 +20,7 @@
      * @param item bean for saving to database
      * @return saved item with id field populated
      */
-    T add(T item);
+    T add(T item) throws FilmoviException;
 
     /**
      * Fully updates entity in database based on id (primary) match.
@@ -26,20 +28,25 @@
      * @param item - bean to be updated. id must be populated
      * @return updated version of bean
      */
-    T update(T item);
+    T update(T item) throws FilmoviException;
 
     /**
      * Hard delete of item from database with given id
      *
      * @param id - primary key of entity
      */
-    void delete(int id);
+    void delete(int id) throws FilmoviException;
 
     /**
      * Lists all entities from database. WARNING: Very slow operation because it reads all records.
      *
      * @return List of entities from database
      */
-    List<T> getAll();
+    List<T> getAll() throws FilmoviException;
     void resetIncrement();
+    /**
+     * Resets increment of set table
+     *
+     *
+     */
 }
\ No newline at end of file
Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	
+++ /dev/null	
@@ -1,3 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
Index: src/main/java/ba/unsa/etf/rpr/App.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ba.unsa.etf.rpr;\r\n\r\nimport java.util.List;\r\n\r\npublic class App {\r\n    public static void main(String[] args) {\r\n        /*KartaDao dao = new KartaDaoSQLImpl();\r\n        List<Karta> karte = dao.getAll();\r\n        System.out.println(karte);*/\r\n        /*FilmDao dao = new FilmDaoSQLImpl();\r\n        List<Film> filmovi = dao.getAll();\r\n        System.out.println(filmovi);*/\r\n        KupacDao dao = new KupacDaoSQLImpl();\r\n        List<Kupac> kupci = dao.getAll();\r\n        System.out.println(kupci);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ba/unsa/etf/rpr/App.java b/src/main/java/ba/unsa/etf/rpr/App.java
--- a/src/main/java/ba/unsa/etf/rpr/App.java	
+++ b/src/main/java/ba/unsa/etf/rpr/App.java	
@@ -1,17 +1,32 @@
 package ba.unsa.etf.rpr;
 
-import java.util.List;
+import javafx.application.Application;
+import javafx.fxml.FXMLLoader;
+import javafx.scene.Parent;
+import javafx.scene.Scene;
+import javafx.stage.Stage;
+
+import java.io.IOException;
+import java.sql.SQLException;
 
-public class App {
-    public static void main(String[] args) {
-        /*KartaDao dao = new KartaDaoSQLImpl();
-        List<Karta> karte = dao.getAll();
-        System.out.println(karte);*/
-        /*FilmDao dao = new FilmDaoSQLImpl();
-        List<Film> filmovi = dao.getAll();
-        System.out.println(filmovi);*/
-        KupacDao dao = new KupacDaoSQLImpl();
-        List<Kupac> kupci = dao.getAll();
-        System.out.println(kupci);
+import static javafx.scene.layout.Region.USE_COMPUTED_SIZE;
+
+public class App extends Application {
+    @Override
+    public void start(Stage primarystage) throws IOException {
+        FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource("/fxml/loginProzor.fxml"));
+        Parent root = fxmlLoader.load();
+        Scene scene = new Scene(root, USE_COMPUTED_SIZE, USE_COMPUTED_SIZE);
+        primarystage.setResizable(false);
+        primarystage.setMinHeight(150);
+        primarystage.setMinWidth(300);
+//        primarystage.getIcons().add(new Image("https://cdn-icons-png.flaticon.com/512/3418/3418886.png"));
+        primarystage.setTitle("Prijava");
+        primarystage.setScene(scene);
+        primarystage.show();
+    }
+
+    public static void main(String[] args) throws SQLException {
+        launch();
     }
 }
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
new file mode 100644
--- /dev/null	
+++ b/.gitignore	
@@ -0,0 +1,5 @@
+# Default ignored files
+/shelf/
+/.idea/workspace.xml
+config.properties
+/target
\ No newline at end of file
