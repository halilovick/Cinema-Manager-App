package ba.unsa.etf.rpr.business;

import ba.unsa.etf.rpr.dao.DaoFactory;
import ba.unsa.etf.rpr.domain.Film;
import ba.unsa.etf.rpr.exceptions.FilmoviException;

import java.util.List;

/**
 * Manager class for filmovi
 */
public class filmoviManager {
    /**
     * Adds film to database.
     *
     * @param f the film
     * @throws FilmoviException the filmovi exception
     */
    public Film add(Film f) throws FilmoviException {
        if (f.getId() != 0) throw new FilmoviException("Film can not already have an ID. ID is autogenerated.");
        try {
            return DaoFactory.filmDao().add(f);
        } catch (FilmoviException e) {
            throw new FilmoviException(e.getMessage(), e);
        }
    }

    /**
     * Deletes film from database.
     *
     * @param filmId the film id
     * @throws FilmoviException the filmovi exception
     */
    public void delete(int filmId) throws FilmoviException {
        try {
            DaoFactory.filmDao().delete(filmId);
        } catch (FilmoviException e) {
            throw new FilmoviException(e.getMessage(), e);
        }
    }

    /**
     * Updates film in database.
     *
     * @param film the film
     * @throws FilmoviException the filmovi exception
     */
    public Film update(Film film) throws FilmoviException {
        return DaoFactory.filmDao().update(film);
    }

    /**
     * Gets all films from database.
     *
     * @return List with all Films in database
     * @throws FilmoviException the filmovi exception
     */
    public List<Film> getAll() throws FilmoviException {
        return DaoFactory.filmDao().getAll();
    }

    /**
     * Gets by ime.
     *
     * @param ime the title of the film
     * @return the Film
     * @throws FilmoviException the filmovi exception
     */
    public Film getByIme(String ime) throws FilmoviException {
        return DaoFactory.filmDao().getByIme(ime);
    }

    /**
     * Gets film by id.
     *
     * @param id the film id
     * @return the film
     * @throws FilmoviException the filmovi exception
     */
    public Film getById(int id) throws FilmoviException {
        return DaoFactory.filmDao().getById(id);
    }

    /**
     * Gets all film titles from database.
     *
     * @return List with titles of films.
     * @throws FilmoviException the filmovi exception
     */
    public List<String> getAllNames() throws FilmoviException {
        return DaoFactory.filmDao().getAllNames();
    }
}
